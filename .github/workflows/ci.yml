name: Continuous Integration

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

env:
  VCPKG_COMMIT: "1f124eb6b188994a2e0fb7894690c69e600633ae"
  VCPKG_ROOT: "${{ github.workspace }}/vcpkg"

jobs:
  lint:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Lint
      run: |
        cmake -D FORMAT_COMMAND=clang-format-17 -P cmake/lint.cmake

  test:
    needs: [lint]

    strategy:
      matrix:
        os: [ubuntu-24.04]

        type: [static]

        include:
        - { type: static, shared: NO }

    runs-on: ${{ matrix.os }}

    env:
      APEX_DISABLE: "1"

    steps:
    - uses: actions/checkout@v4

    - name: Install static analyzers
      if: matrix.os == 'ubuntu-24.04'
      run: >-
        sudo apt-get install cppcheck -y -q

        sudo update-alternatives --install
        /usr/bin/clang-tidy clang-tidy
        /usr/bin/clang-tidy-17 150

        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-17 150

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: "${{ env.VCPKG_COMMIT }}"
        vcpkgDirectory: "${{ env.VCPKG_ROOT }}"

    - name: Setup MultiToolTask
      if: matrix.os == 'windows-2022'
      run: |
        Add-Content "$env:GITHUB_ENV" 'UseMultiToolTask=true'
        Add-Content "$env:GITHUB_ENV" 'EnforceProcessCountAcrossBuilds=true'

    - name: Configure
      shell: pwsh
      run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])"
        -D BUILD_SHARED_LIBS=${{ matrix.shared }}

    - name: Setup PATH
      if: matrix.os == 'windows-2022' && matrix.type == 'shared'
      run: Add-Content "$env:GITHUB_PATH" "$(Get-Location)\build\RelWithDebInfo"

    - name: Build
      run: cmake --build build --config RelWithDebInfo -j 2

    - name: Install
      run: cmake --install build --config RelWithDebInfo --prefix prefix

    - name: Dump configure logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cmake-error-${{ matrix.os }}-${{ matrix.type }}
        path: |
          ${{ env.VCPKG_ROOT }}/buildtrees/*/*.log
          build/vcpkg_installed/*/share

    - name: Test
      working-directory: build
      run: ctest --output-on-failure --no-tests=error -C RelWithDebInfo -j 2

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: solarsim-${{ matrix.os }}-${{ matrix.type }}
        path: |
          prefix/
          build/vcpkg_installed/*/lib
